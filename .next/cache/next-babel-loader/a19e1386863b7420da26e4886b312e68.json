{"ast":null,"code":"import { createStore, action, computed, thunk } from \"easy-peasy\";\nimport { setScanUrl, setScanCtgs, setScanInProgress, setMetadata, reSetScanUrl, addInfoEvent, addErrorEvent, addDataEvent, startStream, setDb, initDb } from \"../eventHandlers/eventHandlers.js\";\nvar Store = createStore({\n  scanUrl: \"\",\n  scanCtgs: \"\",\n  scanInProgress: false,\n  metadata: {},\n  infoEvents: [],\n  dataEvents: [],\n  errorEvents: [],\n  db: {},\n  setScanUrl: action(function (state, scanUrl) {\n    return setScanUrl(state, scanUrl);\n  }),\n  setScanCtgs: action(function (state, scanCtgs) {\n    return setScanCtgs(state, scanCtgs);\n  }),\n  setScanInProgress: action(function (state, check) {\n    return setScanInProgress(state, check);\n  }),\n  setMetadata: action(function (state, meta) {\n    return setMetadata(state, meta);\n  }),\n  reSetScanUrl: action(function (state) {\n    return reSetScanUrl(state);\n  }),\n  addInfoEvent: action(function (state, event) {\n    addInfoEvent(state, event);\n  }),\n  addDataEvent: action(function (state, payload) {\n    addDataEvent(state, payload);\n  }),\n  addErrorEvent: action(function (state, event) {\n    addErrorEvent(state, event);\n  }),\n  startStream: thunk(function (actions, query) {\n    return startStream(actions, query);\n  }),\n  setDb: action(function (state, db) {\n    return setDb(state, db);\n  }),\n  initDb: thunk(function (actions) {\n    return initDb(actions);\n  })\n});\nexport default Store;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/lib/state/store/Store.js"],"names":["createStore","action","computed","thunk","setScanUrl","setScanCtgs","setScanInProgress","setMetadata","reSetScanUrl","addInfoEvent","addErrorEvent","addDataEvent","startStream","setDb","initDb","Store","scanUrl","scanCtgs","scanInProgress","metadata","infoEvents","dataEvents","errorEvents","db","state","check","meta","event","payload","actions","query"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,KAAxC,QAAqD,YAArD;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,YARF,EASEC,WATF,EAUEC,KAVF,EAWEC,MAXF,QAYO,mCAZP;AAcA,IAAMC,KAAK,GAAGf,WAAW,CAAC;AACxBgB,EAAAA,OAAO,EAAE,EADe;AAExBC,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,cAAc,EAAE,KAHQ;AAIxBC,EAAAA,QAAQ,EAAE,EAJc;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,UAAU,EAAE,EANY;AAOxBC,EAAAA,WAAW,EAAE,EAPW;AAQxBC,EAAAA,EAAE,EAAE,EARoB;AASxBnB,EAAAA,UAAU,EAAEH,MAAM,CAAC,UAACuB,KAAD,EAAQR,OAAR;AAAA,WAAoBZ,UAAU,CAACoB,KAAD,EAAQR,OAAR,CAA9B;AAAA,GAAD,CATM;AAUxBX,EAAAA,WAAW,EAAEJ,MAAM,CAAC,UAACuB,KAAD,EAAQP,QAAR;AAAA,WAAqBZ,WAAW,CAACmB,KAAD,EAAQP,QAAR,CAAhC;AAAA,GAAD,CAVK;AAWxBX,EAAAA,iBAAiB,EAAEL,MAAM,CAAC,UAACuB,KAAD,EAAQC,KAAR;AAAA,WAAkBnB,iBAAiB,CAACkB,KAAD,EAAQC,KAAR,CAAnC;AAAA,GAAD,CAXD;AAYxBlB,EAAAA,WAAW,EAAEN,MAAM,CAAC,UAACuB,KAAD,EAAQE,IAAR;AAAA,WAAiBnB,WAAW,CAACiB,KAAD,EAAQE,IAAR,CAA5B;AAAA,GAAD,CAZK;AAaxBlB,EAAAA,YAAY,EAAEP,MAAM,CAAC,UAAAuB,KAAK;AAAA,WAAIhB,YAAY,CAACgB,KAAD,CAAhB;AAAA,GAAN,CAbI;AAcxBf,EAAAA,YAAY,EAAER,MAAM,CAAC,UAACuB,KAAD,EAAQG,KAAR,EAAkB;AACrClB,IAAAA,YAAY,CAACe,KAAD,EAAQG,KAAR,CAAZ;AACD,GAFmB,CAdI;AAiBxBhB,EAAAA,YAAY,EAAEV,MAAM,CAAC,UAACuB,KAAD,EAAQI,OAAR,EAAoB;AACvCjB,IAAAA,YAAY,CAACa,KAAD,EAAQI,OAAR,CAAZ;AACD,GAFmB,CAjBI;AAoBxBlB,EAAAA,aAAa,EAAET,MAAM,CAAC,UAACuB,KAAD,EAAQG,KAAR,EAAkB;AACtCjB,IAAAA,aAAa,CAACc,KAAD,EAAQG,KAAR,CAAb;AACD,GAFoB,CApBG;AAuBxBf,EAAAA,WAAW,EAAET,KAAK,CAAC,UAAC0B,OAAD,EAAUC,KAAV;AAAA,WAAoBlB,WAAW,CAACiB,OAAD,EAAUC,KAAV,CAA/B;AAAA,GAAD,CAvBM;AAwBxBjB,EAAAA,KAAK,EAAEZ,MAAM,CAAC,UAACuB,KAAD,EAAQD,EAAR;AAAA,WAAeV,KAAK,CAACW,KAAD,EAAQD,EAAR,CAApB;AAAA,GAAD,CAxBW;AAyBxBT,EAAAA,MAAM,EAAEX,KAAK,CAAC,UAAA0B,OAAO;AAAA,WAAIf,MAAM,CAACe,OAAD,CAAV;AAAA,GAAR;AAzBW,CAAD,CAAzB;AA4BA,eAAed,KAAf","sourcesContent":["import { createStore, action, computed, thunk } from \"easy-peasy\";\n\nimport {\n  setScanUrl,\n  setScanCtgs,\n  setScanInProgress,\n  setMetadata,\n  reSetScanUrl,\n  addInfoEvent,\n  addErrorEvent,\n  addDataEvent,\n  startStream,\n  setDb,\n  initDb\n} from \"../eventHandlers/eventHandlers.js\";\n\nconst Store = createStore({\n  scanUrl: \"\",\n  scanCtgs: \"\",\n  scanInProgress: false,\n  metadata: {},\n  infoEvents: [],\n  dataEvents: [],\n  errorEvents: [],\n  db: {},\n  setScanUrl: action((state, scanUrl) => setScanUrl(state, scanUrl)),\n  setScanCtgs: action((state, scanCtgs) => setScanCtgs(state, scanCtgs)),\n  setScanInProgress: action((state, check) => setScanInProgress(state, check)),\n  setMetadata: action((state, meta) => setMetadata(state, meta)),\n  reSetScanUrl: action(state => reSetScanUrl(state)),\n  addInfoEvent: action((state, event) => {\n    addInfoEvent(state, event);\n  }),\n  addDataEvent: action((state, payload) => {\n    addDataEvent(state, payload);\n  }),\n  addErrorEvent: action((state, event) => {\n    addErrorEvent(state, event);\n  }),\n  startStream: thunk((actions, query) => startStream(actions, query)),\n  setDb: action((state, db) => setDb(state, db)),\n  initDb: thunk(actions => initDb(actions))\n});\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}