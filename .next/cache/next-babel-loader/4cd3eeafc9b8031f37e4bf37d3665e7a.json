{"ast":null,"code":"export const chunkify = array => {\n  return Array.from({\n    length: Math.ceil(array.length / 4)\n  }, (_, i) => {\n    const start = i * 4;\n    return array.slice(start, start + 4);\n  });\n};\nexport const createTableData = dataRaw => {\n  // Creates 15X36 empty spreadsheet as a default placeholder\n  const numberOfColumns = dataRaw.length ? Object.keys(dataRaw[0]).length : 15;\n  const row = Array.from({\n    length: numberOfColumns\n  }, (_, i) => ({\n    value: \" \"\n  }));\n  const emptyTable = Array.from({\n    length: 36\n  }, (_, i) => row);\n  if (!dataRaw.length) return emptyTable; // dataRaw format:\n  // [\n  //   {url: \"url\", timestamp: \"timestamp\", scannedUrl: \"scannedUrl\", locale: \"locale\", productId: \"productId\", …},\n  //   {url: \"url\", timestamp: \"timestamp\", scannedUrl: \"scannedUrl\", locale: \"locale\", productId: \"productId\", …}\n  // ]\n  // Format needed for react-datasheet:\n  // [\n  //   [{value:  1}, {value:  3}],\n  //   [{value:  2}, {value:  4}]\n  // ]\n\n  const title = Object.keys(dataRaw[0]).map(titleKey => ({\n    value: titleKey\n  }));\n  const bodyRaw = dataRaw.map(row => Object.values(row));\n  const body = bodyRaw.map(row => row.map(cell => ({\n    value: Array.isArray(cell) ? JSON.stringify(cell) : cell\n  })));\n  return [title, ...body, ...emptyTable];\n};","map":null,"metadata":{},"sourceType":"module"}