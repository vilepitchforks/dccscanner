{"ast":null,"code":"const {\n  authCreds\n} = require(\"./regex\");\n\nexports.withoutCreds = url => {\n  // Check if creds are passed in the URL (https://username:password@www.website.com)\n  const hasCreds = authCreds.test(url); // Extract creds from the URL in format username:password@\n\n  const creds = hasCreds && url.match(authCreds)[0].replace(\"@\", \"\"); // If creds are passed, remove them from the URL\n\n  const inputURL = creds ? url.replace(creds + \"@\", \"\") : url;\n  return inputURL;\n};","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/lib/helpers/withoutCreds.js"],"names":["authCreds","require","exports","withoutCreds","url","hasCreds","test","creds","match","replace","inputURL"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,SAAD,CAA7B;;AAEAC,OAAO,CAACC,YAAR,GAAuBC,GAAG,IAAI;AAC5B;AACA,QAAMC,QAAQ,GAAGL,SAAS,CAACM,IAAV,CAAeF,GAAf,CAAjB,CAF4B,CAI5B;;AACA,QAAMG,KAAK,GAAGF,QAAQ,IAAID,GAAG,CAACI,KAAJ,CAAUR,SAAV,EAAqB,CAArB,EAAwBS,OAAxB,CAAgC,GAAhC,EAAqC,EAArC,CAA1B,CAL4B,CAO5B;;AACA,QAAMC,QAAQ,GAAGH,KAAK,GAAGH,GAAG,CAACK,OAAJ,CAAYF,KAAK,GAAG,GAApB,EAAyB,EAAzB,CAAH,GAAkCH,GAAxD;AAEA,SAAOM,QAAP;AACD,CAXD","sourcesContent":["const { authCreds } = require(\"./regex\");\n\nexports.withoutCreds = url => {\n  // Check if creds are passed in the URL (https://username:password@www.website.com)\n  const hasCreds = authCreds.test(url);\n\n  // Extract creds from the URL in format username:password@\n  const creds = hasCreds && url.match(authCreds)[0].replace(\"@\", \"\");\n\n  // If creds are passed, remove them from the URL\n  const inputURL = creds ? url.replace(creds + \"@\", \"\") : url;\n\n  return inputURL;\n};\n"]},"metadata":{},"sourceType":"script"}