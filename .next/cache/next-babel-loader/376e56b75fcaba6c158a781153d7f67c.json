{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { makeStoreData } from \"../../lib/helpers/processDb.js\";\nimport css from \"./CurrentScan.module.css\";\nimport ScanLog from \"../ScanLog/ScanLog\";\n\nconst CurrentScan = () => {\n  const {\n    0: viewLog,\n    1: setViewLog\n  } = useState(false);\n  const {\n    scanUrl,\n    metadata,\n    dataEvents,\n    db,\n    scanInProgress\n  } = useStoreState(state => state);\n  const actions = useStoreActions(actions => actions);\n  useEffect(() => {\n    scanUrl && !scanInProgress && actions.addInfoEvent(`Scan data for ${scanUrl} successfully processed.`);\n    scanUrl && !scanInProgress && !dataEvents.length && actions.addInfoEvent(`No bvDCC data found for ${scanUrl}.`);\n  }, [scanInProgress, dataEvents]); // Process scan data\n\n  useEffect(() => {\n    (async () => {\n      const dataItem = dataEvents[dataEvents.length - 1];\n      dataItem && (\n      /* dataItem.url === scanUrl && */\n      await db.collection(\"dccdata\").insert(dataItem, () => {\n        actions.addInfoEvent(`Scan data for item ${dataItem.scannedUrl} successfully stored.`);\n      }));\n    })();\n  }, [dataEvents]); // Available items: description, icon, image, title, url\n\n  const {\n    icon,\n    title\n  } = metadata;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          className: \"u-pull-left icon\",\n          src: icon || \"./logo192.png\",\n          alt: \"icon\"\n        }), /*#__PURE__*/_jsx(\"h5\", {\n          className: css.title,\n          children: scanUrl && title.length ? title : \"Click on the + icon in the lower right corner of the screen to start a new scan.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        className: css[\"view-log\"],\n        onClick: () => setViewLog(!viewLog),\n        children: [viewLog ? \"Hide\" : \"View\", \" scan log\"]\n      }), viewLog && /*#__PURE__*/_jsx(ScanLog, {})]\n    })\n  });\n};\n\nexport default CurrentScan;","map":null,"metadata":{},"sourceType":"module"}