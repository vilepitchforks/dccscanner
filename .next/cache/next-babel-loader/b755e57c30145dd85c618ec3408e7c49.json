{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angelovski/Documents/Projects/dccscanner/web/src/components/ScanLog/ScanLog.js\";\nimport { useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport css from \"./ScanLog.module.css\";\n\nconst ScanLog = () => {\n  const scanLogRref = useRef();\n  const {\n    scanCompleted,\n    infoEvents,\n    errorEvents\n  } = useStoreState(state => state);\n  useEffect(() => {\n    const child = scanLogRref.current.lastElementChild; // Autoscroll\n\n    !scanCompleted && child && child.scrollIntoView(true);\n  }, [infoEvents]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.buildView,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${css.buildStreamFull} ${css.buildStream}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scanLogRref,\n          className: css.buildStreamOutput,\n          children: infoEvents.map((event, i) => /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: css.buildStreamLine,\n            children: event\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: css.buildStreamFooter,\n          children: [/processed/gi.test(infoEvents[infoEvents.length - 1]) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.gray,\n            children: \"Scan completed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), errorEvents.length ? errorEvents.map((event, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.red,\n            children: event\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default ScanLog;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/components/ScanLog/ScanLog.js"],"names":["useEffect","useRef","useStoreState","css","ScanLog","scanLogRref","scanCompleted","infoEvents","errorEvents","state","child","current","lastElementChild","scrollIntoView","buildView","buildStreamFull","buildStream","buildStreamOutput","map","event","i","buildStreamLine","buildStreamFooter","test","length","gray","red"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,WAAW,GAAGJ,MAAM,EAA1B;AAEA,QAAM;AAAEK,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAA6CN,aAAa,CAC9DO,KAAK,IAAIA,KADqD,CAAhE;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGL,WAAW,CAACM,OAAZ,CAAoBC,gBAAlC,CADc,CAEd;;AACA,KAACN,aAAD,IAAkBI,KAAlB,IAA2BA,KAAK,CAACG,cAAN,CAAqB,IAArB,CAA3B;AACD,GAJQ,EAIN,CAACN,UAAD,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEJ,GAAG,CAACW,SAApB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,GAAEX,GAAG,CAACY,eAAgB,IAAGZ,GAAG,CAACa,WAAY,EAA1D;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEX,WAAV;AAAuB,UAAA,SAAS,EAAEF,GAAG,CAACc,iBAAtC;AAAA,oBACGV,UAAU,CAACW,GAAX,CAAe,CAACC,KAAD,EAAQC,CAAR,kBACd;AAAa,YAAA,SAAS,EAAEjB,GAAG,CAACkB,eAA5B;AAAA,sBACGF;AADH,aAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,SAAS,EAAEjB,GAAG,CAACmB,iBAAvB;AAAA,qBACG,cAAcC,IAAd,CAAmBhB,UAAU,CAACA,UAAU,CAACiB,MAAX,GAAoB,CAArB,CAA7B,kBACC;AAAM,YAAA,SAAS,EAAErB,GAAG,CAACsB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIGjB,WAAW,CAACgB,MAAZ,GACGhB,WAAW,CAACU,GAAZ,CAAgB,CAACC,KAAD,EAAQC,CAAR,kBACd;AAAc,YAAA,SAAS,EAAEjB,GAAG,CAACuB,GAA7B;AAAA,sBACGP;AADH,aAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,GAMG,EAVN;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CAxCD;;AA0CA,eAAehB,OAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\n\nimport css from \"./ScanLog.module.css\";\n\nconst ScanLog = () => {\n  const scanLogRref = useRef();\n\n  const { scanCompleted, infoEvents, errorEvents } = useStoreState(\n    state => state\n  );\n\n  useEffect(() => {\n    const child = scanLogRref.current.lastElementChild;\n    // Autoscroll\n    !scanCompleted && child && child.scrollIntoView(true);\n  }, [infoEvents]);\n\n  return (\n    <>\n      <div className={css.buildView}>\n        <div className={`${css.buildStreamFull} ${css.buildStream}`}>\n          <div ref={scanLogRref} className={css.buildStreamOutput}>\n            {infoEvents.map((event, i) => (\n              <pre key={i} className={css.buildStreamLine}>\n                {event}\n              </pre>\n            ))}\n          </div>\n          <footer className={css.buildStreamFooter}>\n            {/processed/gi.test(infoEvents[infoEvents.length - 1]) && (\n              <span className={css.gray}>Scan completed.</span>\n            )}\n            {errorEvents.length\n              ? errorEvents.map((event, i) => (\n                  <span key={i} className={css.red}>\n                    {event}\n                  </span>\n                ))\n              : \"\"}\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ScanLog;\n"]},"metadata":{},"sourceType":"module"}