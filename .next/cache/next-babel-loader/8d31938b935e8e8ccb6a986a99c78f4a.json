{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport css from \"./Scans.module.css\";\nimport ScanThumb from \"../ScanThumb/ScanThumb.js\";\nimport ModalBackground from \"../ModalBackground/ModalBackground\";\nimport { getAllMeta } from \"../../lib/helpers/processDb\";\nimport { chunkify } from \"../../lib/helpers/handleArr\";\nimport ScanData from \"../ScanData/ScanData\";\n\nvar Scans = function Scans() {\n  var _useState = useState([]),\n      metaArray = _useState[0],\n      setMetaArray = _useState[1];\n\n  var _useState2 = useState(false),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      dbName = _useState3[0],\n      setDbName = _useState3[1];\n\n  var _useState4 = useState(false),\n      deleteDb = _useState4[0],\n      setdeleteDb = _useState4[1];\n\n  var _useStoreState = useStoreState(function (state) {\n    return state;\n  }),\n      processInProgress = _useStoreState.processInProgress;\n\n  var scanRows = chunkify(metaArray);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var m;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllMeta();\n\n            case 2:\n              m = _context.sent;\n              m.ok && setMetaArray(m.meta);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // Re-fetch meta from local db after each new website scan has completed and once a db has been deleted\n\n  }, [processInProgress, deleteDb]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [scanRows.map(function (row, i) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: css[\"scans-row\"] + \" row\",\n        children: row.map(function (thumbnail, i) {\n          return /*#__PURE__*/_jsx(ScanThumb, {\n            thumbnail: thumbnail,\n            setShowModal: setShowModal,\n            setDbName: setDbName,\n            setdeleteDb: setdeleteDb\n          }, i);\n        })\n      }, i);\n    }), showModal && /*#__PURE__*/_jsx(ModalBackground, {\n      trigger: setShowModal,\n      children: /*#__PURE__*/_jsx(ScanData, {\n        dbName: dbName\n      })\n    })]\n  });\n};\n\nexport default Scans;","map":null,"metadata":{},"sourceType":"module"}