{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar makeDriver = function makeDriver(_ref) {\n  var method = _ref.method,\n      endpoint = _ref.endpoint,\n      format = _ref.format;\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var email, query, body, options, status, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref2.email, query = _ref2.query, body = _ref2.body;\n              _context.prev = 1;\n              // Reset repeated additions of query to endpoint\n              endpoint = endpoint.split(\"?\")[0];\n              endpoint = query ? endpoint + \"?\" + query : endpoint;\n              options = {\n                method: method,\n                credentials: \"same-origin\",\n                headers: {}\n              };\n              if (email) options.headers.Authorization = \"Basic \" + btoa(email);\n\n              if (body) {\n                options.headers[\"Content-Type\"] = \"application/json\";\n                options.body = JSON.stringify(body);\n              }\n\n              _context.next = 9;\n              return fetch(endpoint, options).then(function (res) {\n                status = res.status;\n                return res[format]();\n              });\n\n            case 9:\n              result = _context.sent;\n\n              if (!(status === 200 || status === 201)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", result);\n\n            case 14:\n              return _context.abrupt(\"return\", false);\n\n            case 15:\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              console.warn(\"driver err\", _context.t0);\n              return _context.abrupt(\"return\", false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexport var authDriver = makeDriver({\n  method: \"POST\",\n  endpoint: \"/api/auth\",\n  format: \"text\"\n});\nexport var slugDriver = makeDriver({\n  method: \"GET\",\n  endpoint: \"/api/slug\",\n  format: \"json\"\n});","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/lib/drivers/restDrivers.js"],"names":["makeDriver","method","endpoint","format","email","query","body","split","options","credentials","headers","Authorization","btoa","JSON","stringify","fetch","then","res","status","result","console","warn","authDriver","slugDriver"],"mappings":";;;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,QAAX,QAAWA,QAAX;AAAA,MAAqBC,MAArB,QAAqBA,MAArB;AAAA;AAAA,yEAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AACnDC,cAAAA,KADmD,SACnDA,KADmD,EAEnDC,KAFmD,SAEnDA,KAFmD,EAGnDC,IAHmD,SAGnDA,IAHmD;AAAA;AAMjD;AACAJ,cAAAA,QAAQ,GAAGA,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACAL,cAAAA,QAAQ,GAAGG,KAAK,GAAGH,QAAQ,GAAG,GAAX,GAAiBG,KAApB,GAA4BH,QAA5C;AAEMM,cAAAA,OAV2C,GAUjC;AACdP,gBAAAA,MAAM,EAANA,MADc;AAEdQ,gBAAAA,WAAW,EAAE,aAFC;AAGdC,gBAAAA,OAAO,EAAE;AAHK,eAViC;AAgBjD,kBAAIN,KAAJ,EAAWI,OAAO,CAACE,OAAR,CAAgBC,aAAhB,GAAgC,WAAWC,IAAI,CAACR,KAAD,CAA/C;;AACX,kBAAIE,IAAJ,EAAU;AACRE,gBAAAA,OAAO,CAACE,OAAR,CAAgB,cAAhB,IAAkC,kBAAlC;AACAF,gBAAAA,OAAO,CAACF,IAAR,GAAeO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAf;AACD;;AApBgD;AAAA,qBAwB5BS,KAAK,CAACb,QAAD,EAAWM,OAAX,CAAL,CAAyBQ,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACxDC,gBAAAA,MAAM,GAAGD,GAAG,CAACC,MAAb;AACA,uBAAOD,GAAG,CAACd,MAAD,CAAH,EAAP;AACD,eAHoB,CAxB4B;;AAAA;AAwB3CgB,cAAAA,MAxB2C;;AAAA,oBA6B7CD,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GA7BgB;AAAA;AAAA;AAAA;;AAAA,+CA8BxCC,MA9BwC;;AAAA;AAAA,+CAgCxC,KAhCwC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCjDC,cAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AAnCiD,+CAoC1C,KApC0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAwCA,OAAO,IAAMC,UAAU,GAAGtB,UAAU,CAAC;AACnCC,EAAAA,MAAM,EAAE,MAD2B;AAEnCC,EAAAA,QAAQ,EAAE,WAFyB;AAGnCC,EAAAA,MAAM,EAAE;AAH2B,CAAD,CAA7B;AAMP,OAAO,IAAMoB,UAAU,GAAGvB,UAAU,CAAC;AACnCC,EAAAA,MAAM,EAAE,KAD2B;AAEnCC,EAAAA,QAAQ,EAAE,WAFyB;AAGnCC,EAAAA,MAAM,EAAE;AAH2B,CAAD,CAA7B","sourcesContent":["const makeDriver = ({ method, endpoint, format }) => async ({\n  email,\n  query,\n  body\n}) => {\n  try {\n    // Reset repeated additions of query to endpoint\n    endpoint = endpoint.split(\"?\")[0];\n    endpoint = query ? endpoint + \"?\" + query : endpoint;\n\n    const options = {\n      method,\n      credentials: \"same-origin\",\n      headers: {}\n    };\n\n    if (email) options.headers.Authorization = \"Basic \" + btoa(email);\n    if (body) {\n      options.headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(body);\n    }\n\n    let status;\n\n    const result = await fetch(endpoint, options).then(res => {\n      status = res.status;\n      return res[format]();\n    });\n\n    if (status === 200 || status === 201) {\n      return result;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.warn(\"driver err\", error);\n    return false;\n  }\n};\n\nexport const authDriver = makeDriver({\n  method: \"POST\",\n  endpoint: \"/api/auth\",\n  format: \"text\"\n});\n\nexport const slugDriver = makeDriver({\n  method: \"GET\",\n  endpoint: \"/api/slug\",\n  format: \"json\"\n});\n"]},"metadata":{},"sourceType":"module"}