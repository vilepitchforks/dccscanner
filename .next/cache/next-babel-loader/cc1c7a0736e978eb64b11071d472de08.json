{"ast":null,"code":"export const chunkify = array => {\n  return Array.from({\n    length: Math.ceil(array.length / 4)\n  }, (_, i) => {\n    const start = i * 4;\n    return array.slice(start, start + 4);\n  });\n};\nexport const createTableData = dataRaw => {\n  // Format needed for react-datasheet:\n  // [\n  //   [{value:  1}, {value:  3}],\n  //   [{value:  2}, {value:  4}]\n  // ]\n  const title = Object.keys(dataRaw[0]).map(titleKey => ({\n    value: titleKey\n  }));\n  const bodyRaw = dataRaw.map(row => Object.values(row));\n  const body = bodyRaw.map(row => row.map(cell => ({\n    value: Array.isArray(cell) ? JSON.stringify(cell) : cell\n  })));\n  return [title, ...body];\n};","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/lib/helpers/handleArr.js"],"names":["chunkify","array","Array","from","length","Math","ceil","_","i","start","slice","createTableData","dataRaw","title","Object","keys","map","titleKey","value","bodyRaw","row","values","body","cell","isArray","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAOC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACG,MAAN,GAAe,CAAzB;AAAV,GAAX,EAAoD,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACnE,UAAMC,KAAK,GAAGD,CAAC,GAAG,CAAlB;AACA,WAAOP,KAAK,CAACS,KAAN,CAAYD,KAAZ,EAAmBA,KAAK,GAAG,CAA3B,CAAP;AACD,GAHM,CAAP;AAID,CALM;AAOP,OAAO,MAAME,eAAe,GAAGC,OAAO,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAO,CAAC,CAAD,CAAnB,EAAwBI,GAAxB,CAA4BC,QAAQ,KAAK;AAAEC,IAAAA,KAAK,EAAED;AAAT,GAAL,CAApC,CAAd;AACA,QAAME,OAAO,GAAGP,OAAO,CAACI,GAAR,CAAYI,GAAG,IAAIN,MAAM,CAACO,MAAP,CAAcD,GAAd,CAAnB,CAAhB;AACA,QAAME,IAAI,GAAGH,OAAO,CAACH,GAAR,CAAYI,GAAG,IAC1BA,GAAG,CAACJ,GAAJ,CAAQO,IAAI,KAAK;AACfL,IAAAA,KAAK,EAAEhB,KAAK,CAACsB,OAAN,CAAcD,IAAd,IAAsBE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAtB,GAA6CA;AADrC,GAAL,CAAZ,CADW,CAAb;AAKA,SAAO,CAACV,KAAD,EAAQ,GAAGS,IAAX,CAAP;AACD,CAdM","sourcesContent":["export const chunkify = array => {\n  return Array.from({ length: Math.ceil(array.length / 4) }, (_, i) => {\n    const start = i * 4;\n    return array.slice(start, start + 4);\n  });\n};\n\nexport const createTableData = dataRaw => {\n  // Format needed for react-datasheet:\n  // [\n  //   [{value:  1}, {value:  3}],\n  //   [{value:  2}, {value:  4}]\n  // ]\n  const title = Object.keys(dataRaw[0]).map(titleKey => ({ value: titleKey }));\n  const bodyRaw = dataRaw.map(row => Object.values(row));\n  const body = bodyRaw.map(row =>\n    row.map(cell => ({\n      value: Array.isArray(cell) ? JSON.stringify(cell) : cell\n    }))\n  );\n  return [title, ...body];\n};\n"]},"metadata":{},"sourceType":"module"}