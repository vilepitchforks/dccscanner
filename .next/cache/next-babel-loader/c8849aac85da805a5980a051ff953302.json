{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { makeStoreData } from \"../../lib/helpers/processDb.js\";\nimport NewScanForm from \"../NewScanForm/NewScanForm.js\";\nimport WebCard from \"../WebCard/WebCard.js\";\nimport NewScanInit from \"../NewScanInit/NewScanInit.js\";\nimport ModalBackground from \"../ModalBackground/ModalBackground.js\";\nimport css from \"./NewScanModal.module.css\";\nimport { slugDriver } from \"../../lib/drivers/restDrivers\";\nimport { urlRgx } from \"../../lib/helpers/regex\";\n\nvar NewScanModal = function NewScanModal(_ref) {\n  var isNew = _ref.isNew,\n      setIsNew = _ref.setIsNew,\n      setNewScan = _ref.setNewScan;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var _useState3 = useState([]),\n      slugs = _useState3[0],\n      setSlugs = _useState3[1];\n\n  var _useStoreState = useStoreState(function (state) {\n    return state;\n  }),\n      scanCtgs = _useStoreState.scanCtgs;\n\n  var actions = useStoreActions(function (actions) {\n    return actions;\n  });\n\n  var handleSlugs = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var website, storeMetaData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setUrl(\"\");\n\n              if (!urlRgx.test(url)) {\n                _context.next = 13;\n                break;\n              }\n\n              setIsNew(false);\n              setLoading(true);\n              _context.next = 6;\n              return slugDriver({\n                query: \"url=\" + url\n              });\n\n            case 6:\n              website = _context.sent;\n              actions.setScanUrl(url); // Store website metadata to local db\n\n              storeMetaData = makeStoreData(url, actions, true);\n              _context.t0 = website;\n\n              if (!_context.t0) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return storeMetaData(website.metadata);\n\n            case 13:\n              website && actions.setMetadata(website.metadata);\n              website && setSlugs(website.slugs);\n              website && setLoading(false); // In case of errors while fetching metadata, reset the loading screen\n\n              if (!website) {\n                setIsNew(true);\n                setLoading(false);\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSlugs() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Cleanup function, resets all url data each tome Modal component unmounts\n\n\n  useEffect(function () {\n    return function () {\n      return setIsNew(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(ModalBackground, {\n    trigger: setNewScan,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: css.modal,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"row flex\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"three columns\",\n          children: /*#__PURE__*/_jsx(NewScanForm, {\n            url: url,\n            setUrl: setUrl,\n            slugs: slugs,\n            handleSlugs: handleSlugs\n          })\n        }), /*#__PURE__*/_jsx(WebCard, {\n          loading: loading,\n          isNew: isNew\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: scanCtgs && /*#__PURE__*/_jsx(NewScanInit, {\n          setNewScan: setNewScan\n        })\n      })]\n    })\n  });\n};\n\nexport default NewScanModal;","map":null,"metadata":{},"sourceType":"module"}