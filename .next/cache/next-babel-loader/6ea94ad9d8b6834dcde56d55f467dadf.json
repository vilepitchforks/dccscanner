{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport css from \"./ScanLog.module.css\";\n\nconst ScanLog = () => {\n  const scanLogRref = useRef();\n  const {\n    infoEvents,\n    errorEvents,\n    scanInProgress\n  } = useStoreState(state => state);\n  useEffect(() => {\n    const child = scanLogRref.current.lastElementChild;\n    child && child.scrollIntoViewIfNeeded && child.scrollIntoViewIfNeeded(true);\n  }, [infoEvents]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: css.buildView,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: `${css.buildStreamFull} ${css.buildStream}`,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        ref: scanLogRref,\n        className: css.buildStreamOutput,\n        children: infoEvents.map((event, i) => /*#__PURE__*/_jsx(\"pre\", {\n          className: css.buildStreamLine,\n          children: event\n        }, i))\n      }), /*#__PURE__*/_jsxs(\"footer\", {\n        className: css.buildStreamFooter,\n        children: [!scanInProgress && infoEvents.length ? /*#__PURE__*/_jsx(\"span\", {\n          className: css.gray,\n          children: \"Scan completed. \"\n        }) : \"\", errorEvents.length ? errorEvents.map((event, i) => /*#__PURE__*/_jsx(\"span\", {\n          className: css.red,\n          children: event\n        }, i)) : \"\"]\n      })]\n    })\n  });\n};\n\nexport default ScanLog;","map":null,"metadata":{},"sourceType":"module"}