{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { makeStoreData } from \"../../lib/helpers/processDb.js\";\nimport css from \"./CurrentScan.module.css\";\nimport ScanLog from \"../ScanLog/ScanLog\";\n\nvar CurrentScan = function CurrentScan() {\n  var _useState = useState(false),\n      viewLog = _useState[0],\n      setViewLog = _useState[1];\n\n  var _useStoreState = useStoreState(function (state) {\n    return state;\n  }),\n      scanUrl = _useStoreState.scanUrl,\n      metadata = _useStoreState.metadata,\n      dataEvents = _useStoreState.dataEvents,\n      db = _useStoreState.db,\n      scanInProgress = _useStoreState.scanInProgress;\n\n  var actions = useStoreActions(function (actions) {\n    return actions;\n  });\n  useEffect(function () {\n    scanUrl && !scanInProgress && actions.addInfoEvent(\"Scan data for \".concat(scanUrl, \" successfully processed.\"));\n    scanUrl && !scanInProgress && !dataEvents.length && actions.addInfoEvent(\"No bvDCC data found for \".concat(scanUrl, \".\"));\n  }, [scanInProgress, dataEvents]); // Process scan data\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dataItem;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dataItem = dataEvents[dataEvents.length - 1];\n              _context.t0 = dataItem;\n\n              if (!_context.t0) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return db.collection(\"dccdata\").insert(dataItem, function () {\n                actions.addInfoEvent(\"Scan data for item \".concat(dataItem.scannedUrl, \" successfully stored.\"));\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [dataEvents]); // Available items: description, icon, image, title, url\n\n  var icon = metadata.icon,\n      title = metadata.title;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          className: \"u-pull-left icon\",\n          src: icon || \"./logo192.png\",\n          alt: \"icon\"\n        }), /*#__PURE__*/_jsx(\"h5\", {\n          className: css.title,\n          children: scanUrl && title.length ? title : \"Click on the + icon in the lower right corner of the screen to start a new scan.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        className: css[\"view-log\"],\n        onClick: function onClick() {\n          return setViewLog(!viewLog);\n        },\n        children: [viewLog ? \"Hide\" : \"View\", \" scan log\"]\n      }), viewLog && /*#__PURE__*/_jsx(ScanLog, {})]\n    })\n  });\n};\n\nexport default CurrentScan;","map":null,"metadata":{},"sourceType":"module"}