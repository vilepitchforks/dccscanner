{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angelovski/Documents/Projects/dccscanner/web/src/components/CurrentScan/CurrentScan.js\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport css from \"./CurrentScan.module.css\";\nimport ScanLog from \"../ScanLog/ScanLog\";\n\nconst CurrentScan = () => {\n  const {\n    0: viewLog,\n    1: setViewLog\n  } = useState(false);\n  const {\n    scanUrl,\n    metadata,\n    dataEvents,\n    db,\n    scanInProgress\n  } = useStoreState(state => state);\n  const actions = useStoreActions(actions => actions);\n  useEffect(() => {\n    scanUrl && !scanInProgress && actions.addInfoEvent(`Scan data for ${scanUrl} successfully processed.`);\n    scanUrl && !scanInProgress && !dataEvents.length && actions.addInfoEvent(`No bvDCC data found for ${scanUrl}.`);\n  }, [scanInProgress, dataEvents]); // Process scan data\n\n  useEffect(() => {\n    (async () => {\n      const dataItem = dataEvents[dataEvents.length - 1];\n      dataItem && (\n      /* dataItem.url === scanUrl && */\n      await db.collection(\"dccdata\").insert(dataItem, () => {\n        actions.addInfoEvent(`Scan data for item ${dataItem.scannedUrl} successfully stored.`);\n      }));\n    })();\n  }, [dataEvents]); // Available items: description, icon, image, title, url\n\n  const {\n    icon,\n    title\n  } = metadata;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"u-pull-left icon\",\n          src: icon || \"./logo192.png\",\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: css.title,\n          children: scanUrl && title.length ? title : \"Click on the + icon in the lower right corner of the screen to start a new scan.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: css[\"view-log\"],\n        onClick: () => setViewLog(!viewLog),\n        children: [viewLog ? \"Hide\" : \"View\", \" scan log\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), viewLog && /*#__PURE__*/_jsxDEV(ScanLog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CurrentScan;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/components/CurrentScan/CurrentScan.js"],"names":["useEffect","useState","useStoreActions","useStoreState","css","ScanLog","CurrentScan","viewLog","setViewLog","scanUrl","metadata","dataEvents","db","scanInProgress","state","actions","addInfoEvent","length","dataItem","collection","insert","scannedUrl","icon","title"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,YAA/C;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,EAAjC;AAAqCC,IAAAA;AAArC,MAAwDV,aAAa,CACzEW,KAAK,IAAIA,KADgE,CAA3E;AAGA,QAAMC,OAAO,GAAGb,eAAe,CAACa,OAAO,IAAIA,OAAZ,CAA/B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,IACL,CAACI,cADH,IAEEE,OAAO,CAACC,YAAR,CAAsB,iBAAgBP,OAAQ,0BAA9C,CAFF;AAIAA,IAAAA,OAAO,IACL,CAACI,cADH,IAEE,CAACF,UAAU,CAACM,MAFd,IAGEF,OAAO,CAACC,YAAR,CAAsB,2BAA0BP,OAAQ,GAAxD,CAHF;AAID,GATQ,EASN,CAACI,cAAD,EAAiBF,UAAjB,CATM,CAAT,CARwB,CAmBxB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMkB,QAAQ,GAAGP,UAAU,CAACA,UAAU,CAACM,MAAX,GAAoB,CAArB,CAA3B;AACAC,MAAAA,QAAQ;AACN;AACC,YAAMN,EAAE,CAACO,UAAH,CAAc,SAAd,EAAyBC,MAAzB,CAAgCF,QAAhC,EAA0C,MAAM;AACrDH,QAAAA,OAAO,CAACC,YAAR,CACG,sBAAqBE,QAAQ,CAACG,UAAW,uBAD5C;AAGD,OAJM,CAFD,CAAR;AAOD,KATD;AAUD,GAXQ,EAWN,CAACV,UAAD,CAXM,CAAT,CApBwB,CAiCxB;;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,QAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,GAAG,EAAEY,IAAI,IAAI,eAFf;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAI,UAAA,SAAS,EAAElB,GAAG,CAACmB,KAAnB;AAAA,oBACGd,OAAO,IAAIc,KAAK,CAACN,MAAjB,GACGM,KADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAM,QAAA,SAAS,EAAEnB,GAAG,CAAC,UAAD,CAApB;AAAkC,QAAA,OAAO,EAAE,MAAMI,UAAU,CAAC,CAACD,OAAF,CAA3D;AAAA,mBACGA,OAAO,GAAG,MAAH,GAAY,MADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAgBGA,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1DD;;AA4DA,eAAeD,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\n\nimport css from \"./CurrentScan.module.css\";\n\nimport ScanLog from \"../ScanLog/ScanLog\";\n\nconst CurrentScan = () => {\n  const [viewLog, setViewLog] = useState(false);\n\n  const { scanUrl, metadata, dataEvents, db, scanInProgress } = useStoreState(\n    state => state\n  );\n  const actions = useStoreActions(actions => actions);\n\n  useEffect(() => {\n    scanUrl &&\n      !scanInProgress &&\n      actions.addInfoEvent(`Scan data for ${scanUrl} successfully processed.`);\n\n    scanUrl &&\n      !scanInProgress &&\n      !dataEvents.length &&\n      actions.addInfoEvent(`No bvDCC data found for ${scanUrl}.`);\n  }, [scanInProgress, dataEvents]);\n\n  // Process scan data\n  useEffect(() => {\n    (async () => {\n      const dataItem = dataEvents[dataEvents.length - 1];\n      dataItem &&\n        /* dataItem.url === scanUrl && */\n        (await db.collection(\"dccdata\").insert(dataItem, () => {\n          actions.addInfoEvent(\n            `Scan data for item ${dataItem.scannedUrl} successfully stored.`\n          );\n        }));\n    })();\n  }, [dataEvents]);\n\n  // Available items: description, icon, image, title, url\n  const { icon, title } = metadata;\n\n  return (\n    <div className=\"row\">\n      <div className=\"column\">\n        <div>\n          <img\n            className=\"u-pull-left icon\"\n            src={icon || \"./logo192.png\"}\n            alt=\"icon\"\n          />\n          <h5 className={css.title}>\n            {scanUrl && title.length\n              ? title\n              : \"Click on the + icon in the lower right corner of the screen to start a new scan.\"}\n          </h5>\n        </div>\n        <span className={css[\"view-log\"]} onClick={() => setViewLog(!viewLog)}>\n          {viewLog ? \"Hide\" : \"View\"} scan log\n        </span>\n        {viewLog && <ScanLog />}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentScan;\n"]},"metadata":{},"sourceType":"module"}