{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angelovski/Documents/Projects/dccscanner/web/src/components/Worksheet/Worksheet.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ReactDataSheet from \"react-datasheet\";\n\nclass Worksheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: this.props.data //   grid: [\n      //     [{ value: 1 }, { value: 3 }],\n      //     [{ value: 2 }, { value: 4 }]\n      //   ]\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n      data: this.props.data,\n      valueRenderer: cell => cell.value,\n      onCellsChanged: changes => {\n        const grid = this.props.data.map(row => [...row]);\n        changes.forEach(({\n          cell,\n          row,\n          col,\n          value\n        }) => {\n          grid[row][col] = _objectSpread(_objectSpread({}, grid[row][col]), {}, {\n            value\n          });\n        });\n        this.setState({\n          grid\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Worksheet;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/components/Worksheet/Worksheet.js"],"names":["React","ReactDataSheet","Worksheet","Component","constructor","props","state","grid","data","render","cell","value","changes","map","row","forEach","col","setState"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IADN,CAEX;AACA;AACA;AACA;;AALW,KAAb;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,cAAD;AACE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,IADnB;AAEE,MAAA,aAAa,EAAEE,IAAI,IAAIA,IAAI,CAACC,KAF9B;AAGE,MAAA,cAAc,EAAEC,OAAO,IAAI;AACzB,cAAML,IAAI,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBK,GAAhB,CAAoBC,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAA3B,CAAb;AACAF,QAAAA,OAAO,CAACG,OAAR,CAAgB,CAAC;AAAEL,UAAAA,IAAF;AAAQI,UAAAA,GAAR;AAAaE,UAAAA,GAAb;AAAkBL,UAAAA;AAAlB,SAAD,KAA+B;AAC7CJ,UAAAA,IAAI,CAACO,GAAD,CAAJ,CAAUE,GAAV,oCAAsBT,IAAI,CAACO,GAAD,CAAJ,CAAUE,GAAV,CAAtB;AAAsCL,YAAAA;AAAtC;AACD,SAFD;AAGA,aAAKM,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACD;AATH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1BqC;;AA4BxC,eAAeL,SAAf","sourcesContent":["import React from \"react\";\nimport ReactDataSheet from \"react-datasheet\";\n\nclass Worksheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: this.props.data\n      //   grid: [\n      //     [{ value: 1 }, { value: 3 }],\n      //     [{ value: 2 }, { value: 4 }]\n      //   ]\n    };\n  }\n\n  render() {\n    return (\n      <ReactDataSheet\n        data={this.props.data}\n        valueRenderer={cell => cell.value}\n        onCellsChanged={changes => {\n          const grid = this.props.data.map(row => [...row]);\n          changes.forEach(({ cell, row, col, value }) => {\n            grid[row][col] = { ...grid[row][col], value };\n          });\n          this.setState({ grid });\n        }}\n      />\n    );\n  }\n}\nexport default Worksheet;\n"]},"metadata":{},"sourceType":"module"}