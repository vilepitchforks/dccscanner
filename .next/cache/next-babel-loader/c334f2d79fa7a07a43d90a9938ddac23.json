{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nexport var chunkify = function chunkify(array) {\n  return Array.from({\n    length: Math.ceil(array.length / 4)\n  }, function (_, i) {\n    var start = i * 4;\n    return array.slice(start, start + 4);\n  });\n};\nexport var createTableData = function createTableData(dataRaw) {\n  // Creates 15X36 empty spreadsheet as a default placeholder\n  var numberOfColumns = dataRaw.length ? Object.keys(dataRaw[0]).length : 15;\n  var row = Array.from({\n    length: numberOfColumns\n  }, function (_, i) {\n    return {\n      value: \" \"\n    };\n  });\n  var emptyTable = Array.from({\n    length: 36\n  }, function (_, i) {\n    return row;\n  });\n  if (!dataRaw.length) return emptyTable; // dataRaw format:\n  // [\n  //   {url: \"url\", timestamp: \"timestamp\", scannedUrl: \"scannedUrl\", locale: \"locale\", productId: \"productId\", …},\n  //   {url: \"url\", timestamp: \"timestamp\", scannedUrl: \"scannedUrl\", locale: \"locale\", productId: \"productId\", …}\n  // ]\n  // Format needed for react-datasheet:\n  // [\n  //   [{value:  1}, {value:  3}],\n  //   [{value:  2}, {value:  4}]\n  // ]\n\n  var title = Object.keys(dataRaw[0]).map(function (titleKey) {\n    return {\n      value: titleKey\n    };\n  });\n  var bodyRaw = dataRaw.map(function (row) {\n    return Object.values(row);\n  });\n  var body = bodyRaw.map(function (row) {\n    return row.map(function (cell) {\n      return {\n        value: Array.isArray(cell) ? JSON.stringify(cell) : cell\n      };\n    });\n  });\n  return [title].concat(_toConsumableArray(body), _toConsumableArray(emptyTable));\n};","map":null,"metadata":{},"sourceType":"module"}