{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angelovski/Documents/Projects/dccscanner/web/src/pages/index.js\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport WebList from \"../components/WebList/WebList\";\nimport NewScan from \"../components/NewScan/NewScan\";\n\nconst Home = ({\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"DCC Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WebList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewScan, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async ctx => {\n  // Construct App URL for server side fetching\n  const url = ctx.req.protocol + \"://\" + ctx.req.get(\"host\");\n\n  try {\n    // Check if user is authenticated\n    const {\n      data\n    } = await axios({\n      method: \"post\",\n      url: url + \"/api/auth\",\n      headers: ctx.req.headers\n    });\n    return {\n      props: {\n        user: data\n      }\n    };\n  } catch (error) {\n    console.warn(\"Error from Index.js: \", error.message); // If user is not authenticated, redirect to /login\n\n    if (error.response.status > 400 && ctx.req) ctx.res.writeHead(302, {\n      Location: url + \"/login\"\n    });\n    ctx.res.end();\n    return {\n      props: {\n        data: error.response.data\n      }\n    };\n  }\n};\nexport default Home;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/pages/index.js"],"names":["axios","Head","Navbar","WebList","NewScan","Home","user","getServerSideProps","ctx","url","req","protocol","get","data","method","headers","props","error","console","warn","message","response","status","res","writeHead","Location","end"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CAZD;;AAcA,OAAO,MAAMC,kBAAkB,GAAG,MAAMC,GAAN,IAAa;AAC7C;AACA,QAAMC,GAAG,GAAGD,GAAG,CAACE,GAAJ,CAAQC,QAAR,GAAmB,KAAnB,GAA2BH,GAAG,CAACE,GAAJ,CAAQE,GAAR,CAAY,MAAZ,CAAvC;;AAEA,MAAI;AACF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAAC;AAC3Bc,MAAAA,MAAM,EAAE,MADmB;AAE3BL,MAAAA,GAAG,EAAEA,GAAG,GAAG,WAFgB;AAG3BM,MAAAA,OAAO,EAAEP,GAAG,CAACE,GAAJ,CAAQK;AAHU,KAAD,CAA5B;AAMA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAEV,QAAAA,IAAI,EAAEO;AAAR;AAAT,KAAP;AACD,GATD,CASE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb,EAAsCF,KAAK,CAACG,OAA5C,EADc,CAEd;;AACA,QAAIH,KAAK,CAACI,QAAN,CAAeC,MAAf,GAAwB,GAAxB,IAA+Bd,GAAG,CAACE,GAAvC,EACEF,GAAG,CAACe,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,MAAAA,QAAQ,EAAEhB,GAAG,GAAG;AADK,KAAvB;AAGFD,IAAAA,GAAG,CAACe,GAAJ,CAAQG,GAAR;AACA,WAAO;AAAEV,MAAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAEI,KAAK,CAACI,QAAN,CAAeR;AAAvB;AAAT,KAAP;AACD;AACF,CAvBM;AAyBP,eAAeR,IAAf","sourcesContent":["import axios from \"axios\";\nimport Head from \"next/head\";\n\nimport Navbar from \"../components/Navbar/Navbar\";\nimport WebList from \"../components/WebList/WebList\";\nimport NewScan from \"../components/NewScan/NewScan\";\n\nconst Home = ({ user }) => {\n  return (\n    <>\n      <Head>\n        <title>DCC Scanner</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Navbar user={user} />\n      <WebList />\n      <NewScan />\n    </>\n  );\n};\n\nexport const getServerSideProps = async ctx => {\n  // Construct App URL for server side fetching\n  const url = ctx.req.protocol + \"://\" + ctx.req.get(\"host\");\n\n  try {\n    // Check if user is authenticated\n    const { data } = await axios({\n      method: \"post\",\n      url: url + \"/api/auth\",\n      headers: ctx.req.headers\n    });\n\n    return { props: { user: data } };\n  } catch (error) {\n    console.warn(\"Error from Index.js: \", error.message);\n    // If user is not authenticated, redirect to /login\n    if (error.response.status > 400 && ctx.req)\n      ctx.res.writeHead(302, {\n        Location: url + \"/login\"\n      });\n    ctx.res.end();\n    return { props: { data: error.response.data } };\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}