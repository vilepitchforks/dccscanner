{"ast":null,"code":"import { createStore, action, computed, thunk } from \"easy-peasy\";\nimport { setScanUrl, setScanCtgs, setMetadata, reSetScanUrl, setScanCompleted, addInfoEvent, addErrorEvent, addDataEvent, startStream } from \"../eventHandlers/eventHandlers.js\";\nconst Store = createStore({\n  scanUrl: \"\",\n  scanCtgs: \"\",\n  metadata: {},\n  infoEvents: [],\n  dataEvents: {},\n  errorEvents: [],\n  scanCompleted: false,\n  setScanUrl: action((state, scanUrl) => setScanUrl(state, scanUrl)),\n  setScanCtgs: action((state, scanCtgs) => setScanCtgs(state, scanCtgs)),\n  setMetadata: action((state, meta) => setMetadata(state, meta)),\n  reSetScanUrl: action(state => reSetScanUrl(state)),\n  setScanCompleted: action((state, check) => {\n    setScanCompleted(state, check);\n  }),\n  addInfoEvent: action((state, event) => {\n    addInfoEvent(state, event);\n  }),\n  addDataEvent: action((state, payload) => {\n    addDataEvent(state, payload);\n  }),\n  addErrorEvent: action((state, event) => {\n    addErrorEvent(state, event);\n  }),\n  startStream: thunk((actions, query) => startStream(actions, query))\n});\nexport default Store;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/lib/state/store/Store.js"],"names":["createStore","action","computed","thunk","setScanUrl","setScanCtgs","setMetadata","reSetScanUrl","setScanCompleted","addInfoEvent","addErrorEvent","addDataEvent","startStream","Store","scanUrl","scanCtgs","metadata","infoEvents","dataEvents","errorEvents","scanCompleted","state","meta","check","event","payload","actions","query"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,KAAxC,QAAqD,YAArD;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,YARF,EASEC,WATF,QAUO,mCAVP;AAYA,MAAMC,KAAK,GAAGb,WAAW,CAAC;AACxBc,EAAAA,OAAO,EAAE,EADe;AAExBC,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,QAAQ,EAAE,EAHc;AAIxBC,EAAAA,UAAU,EAAE,EAJY;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,WAAW,EAAE,EANW;AAOxBC,EAAAA,aAAa,EAAE,KAPS;AAQxBhB,EAAAA,UAAU,EAAEH,MAAM,CAAC,CAACoB,KAAD,EAAQP,OAAR,KAAoBV,UAAU,CAACiB,KAAD,EAAQP,OAAR,CAA/B,CARM;AASxBT,EAAAA,WAAW,EAAEJ,MAAM,CAAC,CAACoB,KAAD,EAAQN,QAAR,KAAqBV,WAAW,CAACgB,KAAD,EAAQN,QAAR,CAAjC,CATK;AAUxBT,EAAAA,WAAW,EAAEL,MAAM,CAAC,CAACoB,KAAD,EAAQC,IAAR,KAAiBhB,WAAW,CAACe,KAAD,EAAQC,IAAR,CAA7B,CAVK;AAWxBf,EAAAA,YAAY,EAAEN,MAAM,CAACoB,KAAK,IAAId,YAAY,CAACc,KAAD,CAAtB,CAXI;AAYxBb,EAAAA,gBAAgB,EAAEP,MAAM,CAAC,CAACoB,KAAD,EAAQE,KAAR,KAAkB;AACzCf,IAAAA,gBAAgB,CAACa,KAAD,EAAQE,KAAR,CAAhB;AACD,GAFuB,CAZA;AAexBd,EAAAA,YAAY,EAAER,MAAM,CAAC,CAACoB,KAAD,EAAQG,KAAR,KAAkB;AACrCf,IAAAA,YAAY,CAACY,KAAD,EAAQG,KAAR,CAAZ;AACD,GAFmB,CAfI;AAkBxBb,EAAAA,YAAY,EAAEV,MAAM,CAAC,CAACoB,KAAD,EAAQI,OAAR,KAAoB;AACvCd,IAAAA,YAAY,CAACU,KAAD,EAAQI,OAAR,CAAZ;AACD,GAFmB,CAlBI;AAqBxBf,EAAAA,aAAa,EAAET,MAAM,CAAC,CAACoB,KAAD,EAAQG,KAAR,KAAkB;AACtCd,IAAAA,aAAa,CAACW,KAAD,EAAQG,KAAR,CAAb;AACD,GAFoB,CArBG;AAwBxBZ,EAAAA,WAAW,EAAET,KAAK,CAAC,CAACuB,OAAD,EAAUC,KAAV,KAAoBf,WAAW,CAACc,OAAD,EAAUC,KAAV,CAAhC;AAxBM,CAAD,CAAzB;AA2BA,eAAed,KAAf","sourcesContent":["import { createStore, action, computed, thunk } from \"easy-peasy\";\n\nimport {\n  setScanUrl,\n  setScanCtgs,\n  setMetadata,\n  reSetScanUrl,\n  setScanCompleted,\n  addInfoEvent,\n  addErrorEvent,\n  addDataEvent,\n  startStream\n} from \"../eventHandlers/eventHandlers.js\";\n\nconst Store = createStore({\n  scanUrl: \"\",\n  scanCtgs: \"\",\n  metadata: {},\n  infoEvents: [],\n  dataEvents: {},\n  errorEvents: [],\n  scanCompleted: false,\n  setScanUrl: action((state, scanUrl) => setScanUrl(state, scanUrl)),\n  setScanCtgs: action((state, scanCtgs) => setScanCtgs(state, scanCtgs)),\n  setMetadata: action((state, meta) => setMetadata(state, meta)),\n  reSetScanUrl: action(state => reSetScanUrl(state)),\n  setScanCompleted: action((state, check) => {\n    setScanCompleted(state, check);\n  }),\n  addInfoEvent: action((state, event) => {\n    addInfoEvent(state, event);\n  }),\n  addDataEvent: action((state, payload) => {\n    addDataEvent(state, payload);\n  }),\n  addErrorEvent: action((state, event) => {\n    addErrorEvent(state, event);\n  }),\n  startStream: thunk((actions, query) => startStream(actions, query))\n});\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}