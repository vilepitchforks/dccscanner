{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport Worksheet from \"../Worksheet/Worksheet\";\nimport { DownloadXls, DownloadCsv, DownloadJson } from \"../DownloadIcons/DownloadIcons.js\";\nimport { handleDownloadXls, handleDownloadCsv, handleDownloadJson } from \"../DownloadIcons/DownloadIcons.helper.js\";\nimport { createTableData } from \"../../lib/helpers/arrayHelpers.js\";\nimport { formatTs } from \"../../lib/helpers/formatTimestamps.js\";\n\nconst ScanData = ({\n  selectedWeb\n}) => {\n  const {\n    0: hasDccData,\n    1: setHasDccData\n  } = useState(true);\n  const {\n    0: timestamps,\n    1: setTimestamps\n  } = useState([]);\n  const {\n    0: selectedTs,\n    1: setSelectedTs\n  } = useState(null);\n  const {\n    0: allTsData,\n    1: setAllTsData\n  } = useState([]);\n  const {\n    0: allTsGroupedData,\n    1: setAllTsGroupedData\n  } = useState([]);\n  const {\n    0: allSheetData,\n    1: setAllSheetData\n  } = useState([]);\n  const {\n    0: sheetData,\n    1: setSheetData\n  } = useState([]);\n  const {\n    0: reportData,\n    1: setReportData\n  } = useState([]);\n  const {\n    db\n  } = useStoreState(state => state); // Get all dcc data for one website\n\n  useEffect(() => {\n    (async () => {\n      const websiteData = await db.col(\"dccdata\").findAsArray({\n        url: selectedWeb\n      }, {\n        _id: 0,\n        url: 0\n      });\n      websiteData.length ? setAllTsData(websiteData) : setHasDccData(false);\n    })();\n  }, []); // Make timestamps\n\n  useEffect(() => {\n    const tsSet = new Set(allTsData.map(d => d.timestamp));\n    const ts = Array.from(tsSet);\n    ts.length && setTimestamps(ts.reverse());\n  }, [allTsData]); // Group all data into array of arrays for each timestamp [[ts1],[ts2],[ts3]]\n\n  useEffect(() => {\n    const tsGroupDataTmp = timestamps.length && timestamps.map(t => allTsData.filter(c => c.timestamp === t));\n    tsGroupDataTmp.length && setAllTsGroupedData(tsGroupDataTmp);\n  }, [timestamps]); // Prepare the arrays for the format required by react-datasheet\n\n  useEffect(() => {\n    const sheetAllDataTmp = allTsGroupedData.length ? allTsGroupedData.map(d => createTableData(d)) : [];\n    sheetAllDataTmp.length && setAllSheetData(sheetAllDataTmp);\n  }, [allTsGroupedData]); // Display the selected timestamp data\n\n  useEffect(() => {\n    // Find the index of selected timestamp dataset and send that data to react-datasheet\n    let index = allTsGroupedData.length && allTsGroupedData.findIndex(ds => ds[0].timestamp === selectedTs);\n    index = index === -1 ? 0 : index; // Set data for display in react-worksheet\n\n    allSheetData.length && setSheetData(allSheetData[index] || []); // Set data for display in xlsx, csv and json reports\n\n    allSheetData.length && setReportData(allTsGroupedData[index] || []);\n  }, [allTsGroupedData, selectedTs, allSheetData]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"jsx-3655797331\" + \" \" + \"data-container\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"jsx-3655797331\" + \" \" + \"data-head\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"jsx-3655797331\" + \" \" + \"data-head-url\",\n          children: selectedWeb\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"jsx-3655797331\" + \" \" + \"data-head-element\",\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            className: \"jsx-3655797331\",\n            children: !sheetData.length && hasDccData && \"Loading...\"\n          }), !hasDccData && /*#__PURE__*/_jsxs(\"span\", {\n            className: \"jsx-3655797331\",\n            children: [\"DCC data unavailable for \", selectedWeb]\n          }), sheetData.length && hasDccData ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(DownloadXls, {\n              selectedWeb: selectedWeb,\n              reportData: reportData\n            }), /*#__PURE__*/_jsx(DownloadCsv, {\n              selectedWeb: selectedWeb,\n              reportData: reportData\n            }), /*#__PURE__*/_jsx(DownloadJson, {\n              selectedWeb: selectedWeb,\n              reportData: reportData\n            })]\n          }) : \"\", /*#__PURE__*/_jsx(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            className: \"jsx-3655797331\" + \" \" + \"data-close-icon\",\n            children: /*#__PURE__*/_jsx(\"path\", {\n              d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\",\n              className: \"jsx-3655797331\"\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"jsx-3655797331\" + \" \" + \"data-body\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"jsx-3655797331\" + \" \" + \"data-spreadsheet\",\n          children: sheetData.length ? /*#__PURE__*/_jsx(Worksheet, {\n            data: sheetData\n          }) : /*#__PURE__*/_jsx(Worksheet, {\n            data: createTableData([])\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"jsx-3655797331\" + \" \" + \"data-dates-placeholder\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"jsx-3655797331\" + \" \" + \"data-dates\",\n            children: timestamps.map((timestamp, i) => /*#__PURE__*/_jsx(\"div\", {\n              onClick: () => setSelectedTs(timestamp),\n              className: \"jsx-3655797331\",\n              children: formatTs(timestamp)\n            }, i))\n          })\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"3655797331\",\n      children: [\".data-container.jsx-3655797331{background:red;margin:20px;height:calc(100vh - 40px);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".data-head.jsx-3655797331{background:green;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\", \".data-head-url.jsx-3655797331{background:darkmagenta;width:25rem;-webkit-flex:none;-ms-flex:none;flex:none;}\", \".data-head-element.jsx-3655797331{background:darkorange;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\", \".data-body.jsx-3655797331{background:blue;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;overflow-y:hidden;height:100%;}\", \".data-spreadsheet.jsx-3655797331{background:coral;overflow-y:auto;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;}\", \"data-dates-placeholder.jsx-3655797331{overflow-x:hidden;}\", \".data-dates.jsx-3655797331{background:blueviolet;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;overflow-x:auto;}\", \".data-dates.jsx-3655797331 div.jsx-3655797331{border:1px solid;margin:5px;white-space:nowrap;}\", \".data-close-icon.jsx-3655797331{width:15px;}\"]\n    })]\n  });\n};\n\nexport default ScanData;","map":null,"metadata":{},"sourceType":"module"}