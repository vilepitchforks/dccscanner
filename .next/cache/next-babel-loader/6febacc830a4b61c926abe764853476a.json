{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport { authCreds } from \"../../lib/helpers/regex\";\nimport css from \"./NewScanInit.module.css\"; // const NewScanInit = ({ setNewScan }) => {\n\nvar NewScanInit = function NewScanInit(_ref) {\n  var url = _ref.url,\n      setUrl = _ref.setUrl,\n      setNewScan = _ref.setNewScan;\n\n  var _useStoreState = useStoreState(function (state) {\n    return state;\n  }),\n      scanUrl = _useStoreState.scanUrl,\n      scanCtgs = _useStoreState.scanCtgs; // const { startStream } = useStoreActions(actions => actions);\n\n\n  var _useStoreActions = useStoreActions(function (actions) {\n    return actions;\n  }),\n      setScanUrl = _useStoreActions.setScanUrl,\n      startStream = _useStoreActions.startStream; // const handleInitScan = () => {\n  //   startStream(`url=${scanUrl}&categories=${scanCtgs}`);\n  //   // Removes the modal overlay\n  //   setNewScan(false);\n  // };\n\n\n  var handleInitScan = function handleInitScan() {\n    startStream(\"url=\".concat(url, \"&categories=\").concat(scanCtgs)); // Sets scanUrl in Redux store\n    // Check if creds are passed in the URL (https://username:password@www.website.com)\n\n    var hasCreds = authCreds.test(url); // Extract creds from the URL in format username:password@\n\n    var creds = hasCreds && url.match(authCreds)[0]; // If creds are passed, remove them from the URL\n\n    var inputURL = creds ? url.replace(creds, \"\") : url;\n    setScanUrl(inputURL); // Removes url value from local state\n\n    setUrl(\"\"); // Removes the modal overlay\n\n    setNewScan(false);\n  };\n\n  return /*#__PURE__*/_jsx(\"button\", {\n    className: css.start + \" u-full-width\",\n    onClick: function onClick() {\n      return handleInitScan();\n    },\n    children: \"Start scan\"\n  });\n};\n\nexport default NewScanInit;","map":null,"metadata":{},"sourceType":"module"}