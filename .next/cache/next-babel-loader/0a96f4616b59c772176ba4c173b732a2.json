{"ast":null,"code":"import { createStore, action, computed, thunk } from \"easy-peasy\";\nimport { setScanUrl, setScanCtgs, setMetadata, reSetScanUrl, setScanCompleted, setProcessInProgress, addInfoEvent, addErrorEvent, addDataEvent, startStream } from \"../eventHandlers/eventHandlers.js\";\nconst Store = createStore({\n  scanUrl: \"\",\n  scanCtgs: \"\",\n  metadata: {},\n  infoEvents: [],\n  dataEvents: {},\n  errorEvents: [],\n  scanCompleted: false,\n  processInProgress: false,\n  setScanUrl: action((state, scanUrl) => setScanUrl(state, scanUrl)),\n  setScanCtgs: action((state, scanCtgs) => setScanCtgs(state, scanCtgs)),\n  setMetadata: action((state, meta) => setMetadata(state, meta)),\n  reSetScanUrl: action(state => reSetScanUrl(state)),\n  setScanCompleted: action((state, check) => {\n    setScanCompleted(state, check);\n  }),\n  // Check switch for the entire process from starting scan to the storing of data in db:\n  setProcessInProgress: action((state, check) => {\n    setProcessInProgress(state, check);\n  }),\n  addInfoEvent: action((state, event) => {\n    addInfoEvent(state, event);\n  }),\n  addDataEvent: action((state, payload) => {\n    addDataEvent(state, payload);\n  }),\n  addErrorEvent: action((state, event) => {\n    addErrorEvent(state, event);\n  }),\n  startStream: thunk((actions, query) => startStream(actions, query))\n});\nexport default Store;","map":null,"metadata":{},"sourceType":"module"}