{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport css from \"./Scans.module.css\";\nimport ScanThumb from \"../ScanThumb/ScanThumb.js\";\nimport ModalBackground from \"../ModalBackground/ModalBackground\";\nimport { chunkify } from \"../../lib/helpers/arrayHelpers\";\nimport ScanData from \"../ScanData/ScanData\";\n\nconst Scans = () => {\n  const {\n    0: metaArray,\n    1: setMetaArray\n  } = useState([]);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: selectedWeb,\n    1: setsSlectedWeb\n  } = useState(\"\");\n  const {\n    scanUrl,\n    db\n  } = useStoreState(state => state);\n  const scanRows = chunkify(metaArray);\n  useEffect(() => {\n    (async () => {\n      // Get metadata for all locally stored website scans for initial render\n      const websites = Object.keys(db).length ? await db.col(\"metadata\").findAsArray() : [];\n      setMetaArray(websites);\n    })(); // Re-fetch meta from local db after each new website has beem added\n\n  }, [scanUrl, db]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [scanRows.map((row, i) => /*#__PURE__*/_jsx(\"div\", {\n      className: css[\"scans-row\"] + \" row\",\n      children: row.map((thumbnail, i) => /*#__PURE__*/_jsx(ScanThumb, {\n        thumbnail: thumbnail,\n        setShowModal: setShowModal,\n        setsSlectedWeb: setsSlectedWeb,\n        setMetaArray: setMetaArray\n      }, i))\n    }, i)), showModal && /*#__PURE__*/_jsx(ModalBackground, {\n      trigger: setShowModal,\n      children: /*#__PURE__*/_jsx(ScanData, {\n        selectedWeb: selectedWeb\n      })\n    })]\n  });\n};\n\nexport default Scans;","map":null,"metadata":{},"sourceType":"module"}