{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angelovski/Documents/Projects/dccscanner/web/src/components/WebCard/WebCard.js\";\nimport { useStoreState } from \"easy-peasy\";\nimport css from \"./WebCard.module.css\"; // Styles\n\nconst cardImage = css[\"card-image\"] + \" three columns\"; // Skeletons to be displayed while the website is loading\n\nconst ImageSkeleton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: css.loading + \" \" + cardImage,\n  children: \"\\xA0\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\nconst TitleSkeleton = () => /*#__PURE__*/_jsxDEV(\"h5\", {\n  className: css.loading,\n  children: \"\\xA0\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 29\n}, this);\n\nconst TextSkeleton = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  className: css.loading,\n  children: \"\\xA0\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 28\n}, this); // Default copy to be displayed on new scan\n\n\nconst newTitle = \"New DCC Scan\";\nconst newDescription = \"Initiate a new scan by entering a website URL and selecting the slugs for scanning.\";\n\nconst WebCard = ({\n  loading,\n  isNew\n}) => {\n  const {\n    metadata\n  } = useStoreState(state => state);\n  const {\n    description,\n    icon,\n    image,\n    title,\n    url\n  } = metadata;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css[\"card-container\"] + \" nine columns\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(ImageSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image || \"./placeholder.gif\",\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css[\"card-body\"] + \" nine columns\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(TitleSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"u-pull-left icon\",\n            src: icon || \"./logo192.png\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: isNew ? newTitle : title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(TextSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isNew ? newDescription : description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WebCard;","map":{"version":3,"sources":["/home/angelovski/Documents/Projects/dccscanner/web/src/components/WebCard/WebCard.js"],"names":["useStoreState","css","cardImage","ImageSkeleton","loading","TitleSkeleton","TextSkeleton","newTitle","newDescription","WebCard","isNew","metadata","state","description","icon","image","title","url"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,YAA9B;AAEA,OAAOC,GAAP,MAAgB,sBAAhB,C,CAEA;;AACA,MAAMC,SAAS,GAAGD,GAAG,CAAC,YAAD,CAAH,GAAoB,gBAAtC,C,CAEA;;AACA,MAAME,aAAa,GAAG,mBACpB;AAAK,EAAA,SAAS,EAAEF,GAAG,CAACG,OAAJ,GAAc,GAAd,GAAoBF,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,MAAMG,aAAa,GAAG,mBAAM;AAAI,EAAA,SAAS,EAAEJ,GAAG,CAACG,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5B;;AACA,MAAME,YAAY,GAAG,mBAAM;AAAG,EAAA,SAAS,EAAEL,GAAG,CAACG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,C,CAEA;;;AACA,MAAMG,QAAQ,GAAG,cAAjB;AACA,MAAMC,cAAc,GAClB,qFADF;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEL,EAAAA,OAAF;AAAWM,EAAAA;AAAX,CAAD,KAAwB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeX,aAAa,CAACY,KAAK,IAAIA,KAAV,CAAlC;AAEA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA;AAAnC,MAA2CN,QAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEV,GAAG,CAAC,gBAAD,CAAH,GAAwB,eAAxC;AAAA,2BACE;AAAG,MAAA,IAAI,EAAEgB,GAAT;AAAc,MAAA,MAAM,EAAC,QAArB;AAAA,iBACGb,OAAO,gBACN,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADM,gBAGN;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEa,KAAK,IAAI,mBAAnB;AAAwC,UAAA,GAAG,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQE;AAAK,QAAA,SAAS,EAAEf,GAAG,CAAC,WAAD,CAAH,GAAmB,eAAnC;AAAA,mBACGG,OAAO,gBACN,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,GAAG,EAAEU,IAAI,IAAI,eAFf;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBAAKJ,KAAK,GAAGH,QAAH,GAAcS;AAAxB;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAaGZ,OAAO,gBACN,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAA,oBAAIM,KAAK,GAAGF,cAAH,GAAoBK;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArCD;;AAuCA,eAAeJ,OAAf","sourcesContent":["import { useStoreState } from \"easy-peasy\";\n\nimport css from \"./WebCard.module.css\";\n\n// Styles\nconst cardImage = css[\"card-image\"] + \" three columns\";\n\n// Skeletons to be displayed while the website is loading\nconst ImageSkeleton = () => (\n  <div className={css.loading + \" \" + cardImage}>&nbsp;</div>\n);\nconst TitleSkeleton = () => <h5 className={css.loading}>&nbsp;</h5>;\nconst TextSkeleton = () => <p className={css.loading}>&nbsp;</p>;\n\n// Default copy to be displayed on new scan\nconst newTitle = \"New DCC Scan\";\nconst newDescription =\n  \"Initiate a new scan by entering a website URL and selecting the slugs for scanning.\";\n\nconst WebCard = ({ loading, isNew }) => {\n  const { metadata } = useStoreState(state => state);\n\n  const { description, icon, image, title, url } = metadata;\n\n  return (\n    <div className={css[\"card-container\"] + \" nine columns\"}>\n      <a href={url} target=\"_blank\">\n        {loading ? (\n          <ImageSkeleton />\n        ) : (\n          <div className={cardImage}>\n            <img src={image || \"./placeholder.gif\"} alt={title} />\n          </div>\n        )}\n        <div className={css[\"card-body\"] + \" nine columns\"}>\n          {loading ? (\n            <TitleSkeleton />\n          ) : (\n            <div>\n              <img\n                className=\"u-pull-left icon\"\n                src={icon || \"./logo192.png\"}\n                alt=\"icon\"\n              />\n              <h5>{isNew ? newTitle : title}</h5>\n            </div>\n          )}\n          {loading ? (\n            <TextSkeleton />\n          ) : (\n            <p>{isNew ? newDescription : description}</p>\n          )}\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default WebCard;\n"]},"metadata":{},"sourceType":"module"}