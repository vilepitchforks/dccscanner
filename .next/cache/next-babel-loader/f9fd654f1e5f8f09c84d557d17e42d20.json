{"ast":null,"code":"import zango from \"zangodb\";\nexport class Model {\n  constructor() {\n    const db = new zango.Db(\"dcc\", {\n      // sets the schema, scannedUrl and url are the same url sent by the user\n      metadata: [\"scannedUrl\"],\n      dccdata: [\"url\", \"timestamp\"]\n    });\n    db.open(); // creates the db and collections\n\n    db.on(\"blocked\", () => {\n      console.warn(\"database version cannot be upgraded\");\n    });\n    this.db = db;\n    this.colLabel = \"\";\n  }\n\n  col(collection) {\n    // Used in conjuction with methods that return Cursor and need extra processing, for example db.find()\n    this.colLabel = collection;\n    return this;\n  }\n\n  collection(collection) {\n    // Returns Collection on Model.db instance\n    return this.db.collection(collection);\n  }\n\n  async findAsArray(query, options) {\n    // Used in conjuction with db.col()\n    return await this.db.collection(this.colLabel).find(query, options).toArray();\n  }\n\n  async remove(url) {\n    return await Promise.all([this.db.collection(\"metadata\").remove({\n      scannedUrl: url\n    }), this.db.collection(\"dccdata\").remove({\n      url\n    })]);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}